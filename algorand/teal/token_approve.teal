#pragma version 6
intcblock 1 0 2 127 133 100000 128 255 1002000
bytecblock 0x 0x636f72656964 0x436861696e 0x6e6174697665 0x7075626c6973684d657373616765 0x6e6f70 0x766572696679564141 0x0008 0x76616c6964557064617465417070726f766548617368 0x50726f6772616d 0x414c474f 0x76616c6964557064617465436c65617248617368 0x636f726541646472
txn ApplicationID
intc_1 // 0
==
bnz main_l77
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l76
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l75
txn OnCompletion
intc_0 // OptIn
==
bnz main_l74
txn OnCompletion
intc_1 // NoOp
==
bnz main_l6
err
main_l6:
txna ApplicationArgs 0
bytec 5 // "nop"
==
bnz main_l73
txna ApplicationArgs 0
pushbytes 0x72656365697665417474657374 // "receiveAttest"
==
bnz main_l66
txna ApplicationArgs 0
pushbytes 0x617474657374546f6b656e // "attestToken"
==
bnz main_l57
txna ApplicationArgs 0
pushbytes 0x636f6d706c6574655472616e73666572 // "completeTransfer"
==
bnz main_l41
txna ApplicationArgs 0
pushbytes 0x73656e645472616e73666572 // "sendTransfer"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0x6f7074696e // "optin"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0x676f7665726e616e6365 // "governance"
==
bnz main_l14
err
main_l14:
callsub checkForDuplicate_21
callsub governanceSet_7
store 73
txna ApplicationArgs 1
extract 1 4
store 74
load 74
btoi
load 73
==
pushint 230 // 230
&&
assert
txna ApplicationArgs 1
extract 5 1
btoi
pushint 66 // 66
*
pushint 14 // 14
+
store 68
txn GroupIndex
intc_0 // 1
-
store 75
load 75
gtxns TypeEnum
pushint 6 // appl
==
load 75
gtxns ApplicationID
bytec_1 // "coreid"
app_global_get
==
&&
load 75
gtxnsa ApplicationArgs 0
bytec 6 // "verifyVAA"
==
&&
load 75
gtxns Sender
txn Sender
==
&&
load 75
gtxnsa ApplicationArgs 1
txna ApplicationArgs 1
==
&&
load 75
gtxnsa Accounts 0
txna Accounts 0
==
&&
load 75
gtxnsa Accounts 1
txna Accounts 1
==
&&
load 75
gtxnsa Accounts 2
txna Accounts 2
==
&&
txna ApplicationArgs 1
load 68
intc_2 // 2
extract3
pushbytes 0x0001 // 0x0001
==
&&
txna ApplicationArgs 1
load 68
intc_2 // 2
+
pushint 32 // 32
extract3
pushint 31 // 31
bzero
pushbytes 0x04 // 0x04
concat
==
&&
pushint 254 // 254
&&
assert
load 75
gtxns RekeyTo
global ZeroAddress
==
load 75
gtxns CloseRemainderTo
global ZeroAddress
==
&&
load 75
gtxns AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
txn RekeyTo
global ZeroAddress
==
txn CloseRemainderTo
global ZeroAddress
==
&&
txn AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
txna ApplicationArgs 1
load 68
pushint 43 // 43
+
pushint 32 // 32
extract3
pushint 21 // 21
bzero
pushbytes 0x546f6b656e427269646765 // 0x546f6b656e427269646765
concat
==
pushint 261 // 261
&&
assert
txna ApplicationArgs 1
load 68
pushint 75 // 75
+
intc_0 // 1
extract3
btoi
store 69
load 68
pushint 76 // 76
+
store 68
load 69
intc_0 // 1
==
bnz main_l19
load 69
intc_2 // 2
==
bnz main_l17
err
main_l17:
txna ApplicationArgs 1
load 68
intc_2 // 2
extract3
bytec 7 // 0x0008
==
pushint 280 // 280
&&
assert
bytec 8 // "validUpdateApproveHash"
txna ApplicationArgs 1
load 68
intc_2 // 2
+
pushint 32 // 32
extract3
app_global_put
main_l18:
intc_0 // 1
return
main_l19:
txna ApplicationArgs 1
load 68
intc_2 // 2
extract3
btoi
store 70
load 70
intc_1 // 0
==
load 70
pushint 8 // 8
==
||
pushint 269 // 269
&&
assert
txna ApplicationArgs 1
load 68
intc_2 // 2
+
intc_2 // 2
extract3
store 71
txna ApplicationArgs 1
load 68
pushint 4 // 4
+
pushint 32 // 32
extract3
store 72
bytec_2 // "Chain"
load 71
concat
app_global_get
intc_1 // 0
==
pushint 275 // 275
&&
assert
bytec_2 // "Chain"
load 71
concat
load 72
app_global_put
b main_l18
main_l20:
txna Accounts 1
txna ApplicationArgs 1
btoi
bytec_3 // "native"
callsub getsigaddress_15
==
pushint 798 // 798
&&
assert
txn RekeyTo
global ZeroAddress
==
txn CloseRemainderTo
global ZeroAddress
==
&&
txn AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
itxn_begin
txna Accounts 1
itxn_field Sender
pushint 4 // axfer
itxn_field TypeEnum
txna ApplicationArgs 1
btoi
itxn_field XferAsset
intc_1 // 0
itxn_field AssetAmount
txna Accounts 1
itxn_field AssetReceiver
intc_1 // 0
itxn_field Fee
itxn_submit
intc_0 // 1
return
main_l21:
callsub getMessageFee_8
store 26
pushint 32 // 32
bzero
store 65
txna ApplicationArgs 1
btoi
store 58
txna ApplicationArgs 5
btoi
store 67
intc_2 // 2
callsub checkFeePmt_10
txn GroupIndex
intc_0 // 1
-
store 25
load 58
intc_1 // 0
==
bnz main_l40
load 25
gtxns TypeEnum
pushint 4 // axfer
==
load 25
gtxns Sender
txn Sender
==
&&
load 25
gtxns XferAsset
load 58
==
&&
load 25
gtxns AssetReceiver
txna Accounts 2
==
&&
pushint 696 // 696
&&
assert
load 25
gtxns RekeyTo
global ZeroAddress
==
load 25
gtxns CloseRemainderTo
global ZeroAddress
==
&&
load 25
gtxns AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
load 25
gtxns AssetAmount
store 59
load 67
load 59
<=
pushint 704 // 704
&&
assert
load 59
load 67
-
store 59
load 58
callsub extractdecimal_20
btoi
callsub getFactor_14
store 66
load 66
intc_0 // 1
!=
bnz main_l39
main_l23:
load 59
intc_1 // 0
>
load 67
intc_1 // 0
>=
&&
pushint 720 // 720
&&
assert
load 58
intc_1 // 0
!=
bnz main_l38
bytec_0 // ""
store 62
main_l25:
load 62
global CurrentApplicationAddress
==
bnz main_l37
txna Accounts 2
load 58
bytec_3 // "native"
callsub getsigaddress_15
==
pushint 744 // 744
&&
assert
bytec 7 // 0x0008
store 64
txna ApplicationArgs 1
store 63
main_l27:
load 63
len
pushint 32 // 32
<=
load 64
len
intc_2 // 2
==
&&
txna ApplicationArgs 3
len
pushint 32 // 32
<=
&&
pushint 754 // 754
&&
assert
txn NumAppArgs
pushint 6 // 6
==
bnz main_l36
pushbytes 0x03 // 0x03
main_l29:
load 65
extract 0 24
concat
load 59
itob
concat
load 65
intc_1 // 0
pushint 32 // 32
load 63
len
-
extract3
concat
load 63
concat
load 64
concat
load 65
intc_1 // 0
pushint 32 // 32
txna ApplicationArgs 3
len
-
extract3
concat
txna ApplicationArgs 3
concat
txna ApplicationArgs 4
extract 6 2
concat
load 65
extract 0 24
concat
load 67
itob
concat
txn NumAppArgs
pushint 7 // 7
==
bnz main_l35
bytec_0 // ""
main_l31:
concat
store 60
txn NumAppArgs
pushint 7 // 7
==
bnz main_l34
load 60
len
intc 4 // 133
==
pushint 777 // 777
&&
assert
main_l33:
itxn_begin
callsub sendMfee_11
pushint 6 // appl
itxn_field TypeEnum
bytec_1 // "coreid"
app_global_get
itxn_field ApplicationID
bytec 4 // "publishMessage"
itxn_field ApplicationArgs
load 60
itxn_field ApplicationArgs
intc_1 // 0
itob
itxn_field ApplicationArgs
txna Accounts 1
itxn_field Accounts
bytec 4 // "publishMessage"
itxn_field Note
intc_1 // 0
itxn_field Fee
itxn_submit
intc_0 // 1
return
main_l34:
load 60
len
intc 4 // 133
txna ApplicationArgs 6
len
+
==
pushint 776 // 776
&&
assert
b main_l33
main_l35:
txna ApplicationArgs 6
b main_l31
main_l36:
pushbytes 0x01 // 0x01
b main_l29
main_l37:
intc_2 // 2
intc_1 // 0
pushint 8 // 8
callsub read_4
store 61
txna ApplicationArgs 1
load 61
==
pushint 733 // 733
&&
assert
intc_2 // 2
pushint 60 // 60
pushint 92 // 92
callsub read_4
store 63
intc_2 // 2
pushint 92 // 92
pushint 94 // 94
callsub read_4
store 64
txna Accounts 2
load 64
btoi
load 63
callsub getsigaddress_15
==
pushint 740 // 740
&&
assert
b main_l27
main_l38:
load 58
callsub extractcreator_18
callsub authaddr_16
store 62
b main_l25
main_l39:
load 59
load 66
/
store 59
load 67
load 66
/
store 67
b main_l23
main_l40:
load 25
gtxns TypeEnum
intc_0 // pay
==
load 25
gtxns Sender
txn Sender
==
&&
load 25
gtxns Receiver
txna Accounts 2
==
&&
pushint 680 // 680
&&
assert
load 25
gtxns RekeyTo
global ZeroAddress
==
load 25
gtxns CloseRemainderTo
global ZeroAddress
==
&&
load 25
gtxns AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
load 25
gtxns Amount
store 59
load 67
load 59
<
pushint 686 // 686
&&
assert
load 59
load 67
-
store 59
b main_l23
main_l41:
callsub checkForDuplicate_21
pushint 32 // 32
bzero
store 56
txn GroupIndex
intc_0 // 1
-
store 25
load 25
gtxns TypeEnum
pushint 6 // appl
==
load 25
gtxns ApplicationID
bytec_1 // "coreid"
app_global_get
==
&&
load 25
gtxnsa ApplicationArgs 0
bytec 6 // "verifyVAA"
==
&&
load 25
gtxns Sender
txn Sender
==
&&
load 25
gtxnsa ApplicationArgs 1
txna ApplicationArgs 1
==
&&
load 25
gtxnsa Accounts 0
txna Accounts 0
==
&&
load 25
gtxnsa Accounts 1
txna Accounts 1
==
&&
load 25
gtxnsa Accounts 2
txna Accounts 2
==
&&
pushint 475 // 475
&&
assert
load 25
gtxns RekeyTo
global ZeroAddress
==
load 25
gtxns CloseRemainderTo
global ZeroAddress
==
&&
load 25
gtxns AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
txn RekeyTo
global ZeroAddress
==
txn CloseRemainderTo
global ZeroAddress
==
&&
txn AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
txna ApplicationArgs 1
extract 5 1
btoi
pushint 66 // 66
*
pushint 6 // 6
+
pushint 8 // 8
+
store 45
txna ApplicationArgs 1
load 45
intc_2 // 2
extract3
btoi
store 46
txna ApplicationArgs 1
load 45
intc_2 // 2
+
pushint 32 // 32
extract3
store 47
load 46
pushint 8 // 8
==
bnz main_l56
bytec_2 // "Chain"
txna ApplicationArgs 1
load 45
intc_2 // 2
extract3
concat
app_global_get
load 47
==
pushint 489 // 489
&&
assert
main_l43:
load 45
pushint 43 // 43
+
store 45
txna ApplicationArgs 1
load 45
intc_0 // 1
extract3
btoi
store 57
load 57
intc_0 // 1
==
load 57
pushint 3 // 3
==
||
pushint 496 // 496
&&
assert
txna ApplicationArgs 1
load 45
intc_0 // 1
+
pushint 24 // 24
extract3
load 56
extract 0 24
==
pushint 498 // 498
&&
assert
txna ApplicationArgs 1
load 45
pushint 25 // 25
+
pushint 8 // 8
extract3
btoi
store 48
txna ApplicationArgs 1
load 45
pushint 33 // 33
+
pushint 32 // 32
extract3
store 49
txna ApplicationArgs 1
load 45
pushint 65 // 65
+
intc_2 // 2
extract3
btoi
store 50
txna ApplicationArgs 1
load 45
pushint 67 // 67
+
pushint 32 // 32
extract3
store 51
txna ApplicationArgs 1
load 45
pushint 99 // 99
+
intc_2 // 2
extract3
btoi
store 52
txna ApplicationArgs 1
load 45
pushint 101 // 101
+
pushint 24 // 24
extract3
load 56
extract 0 24
==
pushint 506 // 506
&&
assert
txna ApplicationArgs 1
load 45
pushint 125 // 125
+
pushint 8 // 8
extract3
btoi
store 53
load 52
pushint 8 // 8
==
pushint 510 // 510
&&
assert
load 53
load 48
<=
pushint 512 // 512
&&
assert
load 57
pushint 3 // 3
==
bnz main_l55
main_l44:
load 50
pushint 8 // 8
==
bnz main_l49
pushint 3 // 3
intc_1 // 0
pushint 8 // 8
callsub read_4
btoi
store 54
load 54
intc_1 // 0
!=
txna Accounts 3
load 50
load 49
callsub getsigaddress_15
==
&&
pushint 577 // 577
&&
assert
main_l46:
itxn_begin
txna Accounts 3
itxn_field Sender
pushint 4 // axfer
itxn_field TypeEnum
load 54
itxn_field XferAsset
load 48
itxn_field AssetAmount
load 51
itxn_field AssetReceiver
intc_1 // 0
itxn_field Fee
load 53
intc_1 // 0
>
bnz main_l48
main_l47:
itxn_submit
intc_0 // 1
return
main_l48:
itxn_next
txna Accounts 3
itxn_field Sender
pushint 4 // axfer
itxn_field TypeEnum
load 54
itxn_field XferAsset
load 53
itxn_field AssetAmount
txn Sender
itxn_field AssetReceiver
intc_1 // 0
itxn_field Fee
b main_l47
main_l49:
load 49
extract 24 8
btoi
store 54
txna Accounts 3
load 54
bytec_3 // "native"
callsub getsigaddress_15
==
pushint 527 // 527
&&
assert
load 54
intc_1 // 0
==
bnz main_l52
load 54
callsub extractdecimal_20
btoi
callsub getFactor_14
store 55
load 55
intc_0 // 1
!=
bz main_l46
load 48
load 55
*
store 48
load 53
load 55
*
store 53
b main_l46
main_l52:
itxn_begin
txna Accounts 3
itxn_field Sender
intc_0 // pay
itxn_field TypeEnum
load 51
itxn_field Receiver
load 48
itxn_field Amount
intc_1 // 0
itxn_field Fee
load 53
intc_1 // 0
>
bnz main_l54
main_l53:
itxn_submit
intc_0 // 1
return
main_l54:
itxn_next
txna Accounts 3
itxn_field Sender
intc_0 // pay
itxn_field TypeEnum
txn Sender
itxn_field Receiver
load 53
itxn_field Amount
intc_1 // 0
itxn_field Fee
b main_l53
main_l55:
txn GroupIndex
intc_0 // 1
+
store 25
load 25
gtxns TypeEnum
pushint 6 // appl
==
load 25
gtxnsa ApplicationArgs 0
txna ApplicationArgs 0
==
&&
load 25
gtxnsa ApplicationArgs 1
txna ApplicationArgs 1
==
&&
pushint 519 // 519
&&
assert
callsub getNextAddress_9
load 51
==
pushint 521 // 521
&&
assert
b main_l44
main_l56:
global CurrentApplicationAddress
load 47
==
pushint 488 // 488
&&
assert
b main_l43
main_l57:
callsub getMessageFee_8
store 26
intc_0 // 1
callsub checkFeePmt_10
txna ApplicationArgs 1
btoi
store 42
load 42
callsub extractcreator_18
callsub authaddr_16
global CurrentApplicationAddress
==
bnz main_l65
txna Accounts 2
load 42
bytec_3 // "native"
callsub getsigaddress_15
==
pushint 860 // 860
&&
assert
pushint 32 // 32
bzero
store 38
txna ApplicationArgs 1
btoi
store 42
load 42
intc_1 // 0
==
bnz main_l64
load 42
callsub extractdecimal_20
store 39
load 39
btoi
pushint 8 // 8
>
bnz main_l63
main_l60:
load 42
callsub extractunitname_19
store 40
load 42
callsub extractname_17
store 41
main_l61:
pushbytes 0x02 // 0x02
load 38
extract 0 24
concat
load 42
itob
concat
bytec 7 // 0x0008
concat
load 39
concat
load 40
concat
load 38
intc_1 // 0
pushint 32 // 32
load 40
len
-
extract3
concat
load 41
concat
load 38
intc_1 // 0
pushint 32 // 32
load 41
len
-
extract3
concat
store 37
main_l62:
load 37
len
pushint 100 // 100
==
pushint 902 // 902
&&
assert
itxn_begin
callsub sendMfee_11
pushint 6 // appl
itxn_field TypeEnum
bytec_1 // "coreid"
app_global_get
itxn_field ApplicationID
bytec 4 // "publishMessage"
itxn_field ApplicationArgs
load 37
itxn_field ApplicationArgs
intc_1 // 0
itob
itxn_field ApplicationArgs
txna Accounts 1
itxn_field Accounts
bytec 4 // "publishMessage"
itxn_field Note
intc_1 // 0
itxn_field Fee
itxn_submit
intc_0 // 1
return
main_l63:
pushbytes 0x08 // 0x08
store 39
b main_l60
main_l64:
pushbytes 0x06 // 0x06
store 39
bytec 10 // "ALGO"
store 40
bytec 10 // "ALGO"
store 41
b main_l61
main_l65:
intc_2 // 2
intc_1 // 0
pushint 8 // 8
callsub read_4
store 36
txna ApplicationArgs 1
load 36
==
pushint 843 // 843
&&
assert
intc_2 // 2
pushint 60 // 60
pushint 92 // 92
callsub read_4
store 43
intc_2 // 2
pushint 92 // 92
pushint 94 // 94
callsub read_4
btoi
store 44
txna Accounts 2
load 44
load 43
callsub getsigaddress_15
==
pushint 850 // 850
&&
assert
load 42
callsub extractdecimal_20
btoi
pushint 8 // 8
<=
pushint 853 // 853
&&
assert
intc_2 // 2
pushint 8 // 8
pushint 108 // 108
callsub read_4
store 37
b main_l62
main_l66:
callsub checkForDuplicate_21
txn GroupIndex
pushint 4 // 4
-
store 25
load 25
gtxns TypeEnum
pushint 6 // appl
==
load 25
gtxns ApplicationID
bytec_1 // "coreid"
app_global_get
==
&&
load 25
gtxnsa ApplicationArgs 0
bytec 6 // "verifyVAA"
==
&&
load 25
gtxns Sender
txn Sender
==
&&
load 25
gtxnsa ApplicationArgs 1
txna ApplicationArgs 1
==
&&
load 25
gtxnsa Accounts 0
txna Accounts 0
==
&&
load 25
gtxnsa Accounts 1
txna Accounts 1
==
&&
load 25
gtxnsa Accounts 2
txna Accounts 2
==
&&
pushint 321 // 321
&&
assert
load 25
gtxns RekeyTo
global ZeroAddress
==
load 25
gtxns CloseRemainderTo
global ZeroAddress
==
&&
load 25
gtxns AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
txn GroupIndex
pushint 3 // 3
-
store 25
load 25
gtxns TypeEnum
intc_0 // pay
==
load 25
gtxns Amount
intc 5 // 100000
>=
&&
load 25
gtxns Sender
txn Sender
==
&&
load 25
gtxns Receiver
txna Accounts 3
==
&&
pushint 331 // 331
&&
assert
load 25
gtxns RekeyTo
global ZeroAddress
==
load 25
gtxns CloseRemainderTo
global ZeroAddress
==
&&
load 25
gtxns AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
txn GroupIndex
intc_2 // 2
-
store 25
load 25
gtxns TypeEnum
pushint 6 // appl
==
load 25
gtxns ApplicationID
global CurrentApplicationID
==
&&
load 25
gtxnsa ApplicationArgs 0
bytec 5 // "nop"
==
&&
load 25
gtxns Sender
txn Sender
==
&&
pushint 341 // 341
&&
assert
load 25
gtxns RekeyTo
global ZeroAddress
==
load 25
gtxns CloseRemainderTo
global ZeroAddress
==
&&
load 25
gtxns AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
txn GroupIndex
intc_0 // 1
-
store 25
load 25
gtxns TypeEnum
pushint 6 // appl
==
load 25
gtxns ApplicationID
global CurrentApplicationID
==
&&
load 25
gtxnsa ApplicationArgs 0
bytec 5 // "nop"
==
&&
load 25
gtxns Sender
txn Sender
==
&&
global GroupSize
intc_0 // 1
-
txn GroupIndex
==
&&
pushint 352 // 352
&&
assert
load 25
gtxns RekeyTo
global ZeroAddress
==
load 25
gtxns CloseRemainderTo
global ZeroAddress
==
&&
load 25
gtxns AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
txna ApplicationArgs 1
extract 5 1
btoi
pushint 66 // 66
*
pushint 6 // 6
+
pushint 8 // 8
+
store 27
txna ApplicationArgs 1
load 27
intc_2 // 2
extract3
btoi
store 29
bytec_2 // "Chain"
txna ApplicationArgs 1
load 27
intc_2 // 2
extract3
concat
app_global_get
txna ApplicationArgs 1
load 27
intc_2 // 2
+
pushint 32 // 32
extract3
==
pushint 361 // 361
&&
assert
load 27
pushint 43 // 43
+
store 27
intc_2 // 2
txna ApplicationArgs 1
load 27
intc_0 // 1
extract3
btoi
==
pushint 365 // 365
&&
assert
txna ApplicationArgs 1
load 27
intc_0 // 1
+
pushint 32 // 32
extract3
store 28
txna ApplicationArgs 1
load 27
pushint 33 // 33
+
intc_2 // 2
extract3
btoi
store 30
txna ApplicationArgs 1
load 27
pushint 35 // 35
+
intc_0 // 1
extract3
btoi
store 31
txna ApplicationArgs 1
load 27
pushint 36 // 36
+
pushint 32 // 32
extract3
store 32
txna ApplicationArgs 1
load 27
pushint 68 // 68
+
pushint 32 // 32
extract3
store 33
load 32
callsub trimbytes_13
store 32
load 32
len
pushint 7 // 7
>
bnz main_l72
main_l67:
load 33
callsub trimbytes_13
store 33
load 31
pushint 8 // 8
>
bnz main_l71
main_l68:
txna Accounts 3
load 30
load 28
callsub getsigaddress_15
==
pushint 390 // 390
&&
assert
pushint 3 // 3
intc_1 // 0
pushint 8 // 8
callsub read_4
store 34
txna ApplicationArgs 1
extract 5 1
btoi
pushint 66 // 66
*
pushint 6 // 6
+
store 27
load 34
intc_1 // 0
itob
==
bnz main_l70
main_l69:
txna ApplicationArgs 1
store 35
pushint 3 // 3
pushint 8 // 8
load 35
load 27
load 35
len
load 27
-
extract3
callsub write_6
pop
intc_0 // 1
return
main_l70:
itxn_begin
txna Accounts 3
itxn_field Sender
pushint 3 // acfg
itxn_field TypeEnum
load 33
itxn_field ConfigAssetName
load 32
itxn_field ConfigAssetUnitName
pushint 100000000000000000 // 100000000000000000
itxn_field ConfigAssetTotal
load 31
itxn_field ConfigAssetDecimals
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
global ZeroAddress
itxn_field ConfigAssetFreeze
global ZeroAddress
itxn_field ConfigAssetClawback
intc_1 // 0
itxn_field Fee
itxn_submit
itxn CreatedAssetID
itob
store 34
pushint 3 // 3
intc_1 // 0
load 34
callsub write_6
pop
pushint 3 // 3
pushbytes 0x6173736574 // "asset"
callsub meta_5
b main_l69
main_l71:
pushint 8 // 8
store 31
b main_l68
main_l72:
load 32
extract 0 7
store 32
b main_l67
main_l73:
intc_0 // 1
return
main_l74:
callsub optin_22
return
main_l75:
intc_1 // 0
return
main_l76:
bytec 9 // "Program"
txn ApprovalProgram
concat
sha512_256
bytec 8 // "validUpdateApproveHash"
app_global_get
==
pushint 976 // 976
&&
assert
bytec 9 // "Program"
txn ClearStateProgram
concat
sha512_256
bytec 11 // "validUpdateClearHash"
app_global_get
==
pushint 977 // 977
&&
assert
intc_0 // 1
return
main_l77:
bytec_1 // "coreid"
txna ApplicationArgs 0
btoi
app_global_put
bytec 12 // "coreAddr"
txna ApplicationArgs 1
app_global_put
bytec 8 // "validUpdateApproveHash"
bytec_0 // ""
app_global_put
bytec 11 // "validUpdateClearHash"
pushbytes 0x73be5fd7cd378289177bf4a7ca5433ab30d91b417381bba8bd704aff2dec424f // 0x73be5fd7cd378289177bf4a7ca5433ab30d91b417381bba8bd704aff2dec424f
app_global_put
intc_0 // 1
return

// intkey
intkey_0:
store 2
load 2
itob
extract 7 1
retsub

// zero
zero_1:
store 20
intc_1 // 0
store 21
zero_1_l1:
load 21
pushint 15 // 15
<
bz zero_1_l3
load 20
load 21
callsub intkey_0
intc_3 // 127
bzero
app_local_put
load 21
intc_0 // 1
+
store 21
b zero_1_l1
zero_1_l3:
retsub

// get_byte
getbyte_2:
store 1
store 0
load 0
load 1
intc_3 // 127
/
callsub intkey_0
app_local_get
load 1
intc_3 // 127
%
getbyte
retsub

// set_byte
setbyte_3:
store 24
store 23
store 22
load 22
load 23
intc_3 // 127
/
callsub intkey_0
load 22
load 23
intc_3 // 127
/
callsub intkey_0
app_local_get
load 23
intc_3 // 127
%
load 24
setbyte
app_local_put
retsub

// read
read_4:
store 5
store 4
store 3
bytec_0 // ""
store 7
load 4
intc_3 // 127
/
store 6
read_4_l1:
load 6
load 5
intc_3 // 127
/
<=
bz read_4_l9
load 6
load 4
intc_3 // 127
/
==
bnz read_4_l8
intc_1 // 0
read_4_l4:
store 8
load 6
load 5
intc_3 // 127
/
==
bnz read_4_l7
intc_3 // 127
read_4_l6:
store 9
load 7
load 3
load 6
callsub intkey_0
app_local_get
load 8
load 9
substring3
concat
store 7
load 6
intc_0 // 1
+
store 6
b read_4_l1
read_4_l7:
load 5
intc_3 // 127
%
b read_4_l6
read_4_l8:
load 4
intc_3 // 127
%
b read_4_l4
read_4_l9:
load 7
retsub

// meta
meta_5:
store 11
store 10
load 10
pushbytes 0x6d657461 // "meta"
load 11
app_local_put
retsub

// write
write_6:
store 14
store 13
store 12
intc_1 // 0
store 18
load 13
intc_3 // 127
/
store 15
write_6_l1:
load 15
load 13
load 14
len
+
intc_3 // 127
/
<=
bz write_6_l12
load 15
load 13
intc_3 // 127
/
==
bnz write_6_l11
intc_1 // 0
write_6_l4:
store 16
load 15
load 13
load 14
len
+
intc_3 // 127
/
==
bnz write_6_l10
intc_3 // 127
write_6_l6:
store 17
load 12
load 15
callsub intkey_0
load 17
intc_3 // 127
!=
load 16
intc_1 // 0
!=
||
bnz write_6_l9
intc_3 // 127
store 19
load 14
load 18
intc_3 // 127
extract3
write_6_l8:
app_local_put
load 18
load 19
+
store 18
load 15
intc_0 // 1
+
store 15
b write_6_l1
write_6_l9:
load 17
load 16
-
store 19
load 12
load 15
callsub intkey_0
app_local_get
intc_1 // 0
load 16
substring3
load 14
load 18
load 19
extract3
concat
load 12
load 15
callsub intkey_0
app_local_get
load 17
intc_3 // 127
substring3
concat
b write_6_l8
write_6_l10:
load 13
load 14
len
+
intc_3 // 127
%
b write_6_l6
write_6_l11:
load 13
intc_3 // 127
%
b write_6_l4
write_6_l12:
load 18
retsub

// governanceSet
governanceSet_7:
bytec_1 // "coreid"
app_global_get
pushbytes 0x63757272656e74477561726469616e536574496e646578 // "currentGuardianSetIndex"
app_global_get_ex
store 77
store 76
load 77
pushint 75 // 75
&&
assert
load 76
retsub

// getMessageFee
getMessageFee_8:
bytec_1 // "coreid"
app_global_get
pushbytes 0x4d657373616765466565 // "MessageFee"
app_global_get_ex
store 79
store 78
load 79
pushint 80 // 80
&&
assert
load 78
retsub

// getNextAddress
getNextAddress_9:
txn GroupIndex
intc_0 // 1
+
gtxns ApplicationID
app_params_get AppAddress
store 81
store 80
load 81
pushint 85 // 85
&&
assert
load 80
retsub

// checkFeePmt
checkFeePmt_10:
store 82
load 26
intc_1 // 0
>
bz checkFeePmt_10_l2
txn GroupIndex
load 82
-
store 25
load 25
gtxns TypeEnum
intc_0 // pay
==
load 25
gtxns Sender
txn Sender
==
&&
load 25
gtxns Receiver
global CurrentApplicationAddress
==
&&
load 25
gtxns Amount
load 26
>=
&&
pushint 103 // 103
&&
assert
load 25
gtxns RekeyTo
global ZeroAddress
==
load 25
gtxns CloseRemainderTo
global ZeroAddress
==
&&
load 25
gtxns AssetCloseTo
global ZeroAddress
==
&&
pushint 91 // 91
&&
assert
checkFeePmt_10_l2:
retsub

// sendMfee
sendMfee_11:
load 26
intc_1 // 0
>
bz sendMfee_11_l2
intc_0 // pay
itxn_field TypeEnum
bytec 12 // "coreAddr"
app_global_get
itxn_field Receiver
load 26
itxn_field Amount
intc_1 // 0
itxn_field Fee
itxn_next
sendMfee_11_l2:
retsub

// encode_uvarint
encodeuvarint_12:
store 92
store 91
load 92
store 93
load 93
load 91
intc 6 // 128
>=
bnz encodeuvarint_12_l2
load 91
intc 7 // 255
&
itob
extract 7 1
b encodeuvarint_12_l3
encodeuvarint_12_l2:
load 91
pushint 7 // 7
shr
load 91
intc 7 // 255
&
intc 6 // 128
|
itob
extract 7 1
load 91
load 92
load 93
uncover 4
uncover 4
callsub encodeuvarint_12
cover 3
store 93
store 92
store 91
encodeuvarint_12_l3:
concat
retsub

// trim_bytes
trimbytes_13:
store 83
load 83
store 87
load 87
len
store 84
intc_0 // 1
bzero
store 86
intc_1 // 0
store 85
trimbytes_13_l1:
load 85
load 84
<
bz trimbytes_13_l5
load 87
load 85
intc_0 // 1
extract3
load 86
==
bnz trimbytes_13_l4
trimbytes_13_l3:
load 85
intc_0 // 1
+
store 85
b trimbytes_13_l1
trimbytes_13_l4:
load 87
intc_1 // 0
load 85
extract3
store 87
load 84
store 85
b trimbytes_13_l3
trimbytes_13_l5:
load 87
retsub

// getFactor
getFactor_14:
store 88
load 88
pushint 9 // 9
==
bnz getFactor_14_l20
load 88
pushint 10 // 10
==
bnz getFactor_14_l19
load 88
pushint 11 // 11
==
bnz getFactor_14_l18
load 88
pushint 12 // 12
==
bnz getFactor_14_l17
load 88
pushint 13 // 13
==
bnz getFactor_14_l16
load 88
pushint 14 // 14
==
bnz getFactor_14_l15
load 88
pushint 15 // 15
==
bnz getFactor_14_l14
load 88
pushint 16 // 16
==
bnz getFactor_14_l13
load 88
pushint 16 // 16
>
bnz getFactor_14_l12
load 88
pushint 9 // 9
<
bnz getFactor_14_l11
err
getFactor_14_l11:
intc_0 // 1
b getFactor_14_l21
getFactor_14_l12:
intc_1 // 0
return
intc_0 // 1
getFactor_14_l13:
pushint 100000000 // 100000000
b getFactor_14_l21
getFactor_14_l14:
pushint 10000000 // 10000000
b getFactor_14_l21
getFactor_14_l15:
pushint 1000000 // 1000000
b getFactor_14_l21
getFactor_14_l16:
intc 5 // 100000
b getFactor_14_l21
getFactor_14_l17:
pushint 10000 // 10000
b getFactor_14_l21
getFactor_14_l18:
pushint 1000 // 1000
b getFactor_14_l21
getFactor_14_l19:
pushint 100 // 100
b getFactor_14_l21
getFactor_14_l20:
pushint 10 // 10
getFactor_14_l21:
retsub

// get_sig_address
getsigaddress_15:
store 90
store 89
bytec 9 // "Program"
pushbytes 0x0620010181 // 0x0620010181
concat
load 89
bytec_0 // ""
callsub encodeuvarint_12
concat
pushbytes 0x4880 // 0x4880
concat
load 90
len
bytec_0 // ""
callsub encodeuvarint_12
concat
load 90
concat
pushbytes 0x488800014332048103124433001022124433000881 // 0x488800014332048103124433001022124433000881
concat
intc 8 // 1002000
bytec_0 // ""
callsub encodeuvarint_12
concat
pushbytes 0x124433002032031244330009320312443301108106124433011922124433011881 // 0x124433002032031244330009320312443301108106124433011922124433011881
concat
global CurrentApplicationID
bytec_0 // ""
callsub encodeuvarint_12
concat
pushbytes 0x1244330120320312443302102212443302088100124433022080 // 0x1244330120320312443302102212443302088100124433022080
concat
global CurrentApplicationAddress
len
bytec_0 // ""
callsub encodeuvarint_12
concat
global CurrentApplicationAddress
concat
pushbytes 0x1244330209320312442243 // 0x1244330209320312442243
concat
sha512_256
retsub

// auth_addr
authaddr_16:
store 94
load 94
acct_params_get AcctAuthAddr
store 96
store 95
load 96
bnz authaddr_16_l2
bytec_0 // ""
b authaddr_16_l3
authaddr_16_l2:
load 95
authaddr_16_l3:
retsub

// extract_name
extractname_17:
store 97
load 97
asset_params_get AssetName
store 99
store 98
load 99
bnz extractname_17_l2
bytec_0 // ""
b extractname_17_l3
extractname_17_l2:
load 98
extractname_17_l3:
retsub

// extract_creator
extractcreator_18:
store 100
load 100
asset_params_get AssetCreator
store 102
store 101
load 102
bnz extractcreator_18_l2
bytec_0 // ""
b extractcreator_18_l3
extractcreator_18_l2:
load 101
extractcreator_18_l3:
retsub

// extract_unit_name
extractunitname_19:
store 103
load 103
asset_params_get AssetUnitName
store 105
store 104
load 105
bnz extractunitname_19_l2
bytec_0 // ""
b extractunitname_19_l3
extractunitname_19_l2:
load 104
extractunitname_19_l3:
retsub

// extract_decimal
extractdecimal_20:
store 106
load 106
asset_params_get AssetDecimals
store 108
store 107
load 108
bnz extractdecimal_20_l2
pushbytes 0x00 // 0x00
b extractdecimal_20_l3
extractdecimal_20_l2:
load 107
itob
extract 7 1
extractdecimal_20_l3:
retsub

// checkForDuplicate
checkForDuplicate_21:
txna ApplicationArgs 1
extract 0 1
btoi
intc_0 // 1
==
pushint 931 // 931
&&
assert
txna ApplicationArgs 1
extract 5 1
btoi
pushint 66 // 66
*
pushint 14 // 14
+
store 109
txna ApplicationArgs 1
load 109
pushint 34 // 34
extract3
store 110
txna ApplicationArgs 1
load 109
pushint 34 // 34
+
pushint 8 // 8
extract3
btoi
store 111
load 111
pushint 15240 // 15240
/
store 113
txna Accounts 1
load 113
load 110
callsub getsigaddress_15
==
pushint 941 // 941
&&
assert
load 111
pushint 8 // 8
/
pushint 1905 // 1905
%
store 113
intc_0 // 1
load 113
callsub getbyte_2
store 112
load 112
load 111
pushint 8 // 8
%
getbit
intc_1 // 0
==
pushint 948 // 948
&&
assert
intc_0 // 1
load 113
load 112
load 111
pushint 8 // 8
%
intc_0 // 1
setbit
callsub setbyte_3
retsub

// optin
optin_22:
gtxn 0 TypeEnum
intc_0 // pay
==
gtxn 0 Amount
intc 8 // 1002000
==
&&
gtxn 1 TypeEnum
pushint 6 // appl
==
&&
gtxn 1 OnCompletion
intc_0 // OptIn
==
&&
pushint 998 // 998
&&
assert
intc_1 // 0
callsub zero_1
intc_0 // 1
retsub