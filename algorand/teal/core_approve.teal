#pragma version 6
intcblock 1 0 127 2 1000 19200 128 255 1002000
bytecblock 0x 0x0008 0x677561726469616e 0x63757272656e74477561726469616e536574496e646578 0x4d657373616765466565 0x76616c6964557064617465417070726f766548617368 0x766572696679564141 0x767068617368 0x50726f6772616d 0x7075626c6973684d657373616765 0x6e6f70 0x76657269667953696773 0x0001 0x0000000000000000000000000000000000000000000000000000000000000004 0x00000000000000000000000000000000000000000000000000000000436f7265 0x0000 0x626f6f746564 0x76616c6964557064617465436c65617248617368 0x6d657461
txn ApplicationID
intc_1 // 0
==
bnz main_l69
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l68
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l67
txn OnCompletion
intc_0 // OptIn
==
bnz main_l66
txn OnCompletion
intc_1 // NoOp
==
bnz main_l6
err
main_l6:
txna ApplicationArgs 0
bytec 9 // "publishMessage"
==
bnz main_l63
txna ApplicationArgs 0
bytec 10 // "nop"
==
bnz main_l62
txna ApplicationArgs 0
pushbytes 0x696e6974 // "init"
==
bnz main_l46
txna ApplicationArgs 0
bytec 11 // "verifySigs"
==
bnz main_l45
txna ApplicationArgs 0
bytec 6 // "verifyVAA"
==
bnz main_l29
txna ApplicationArgs 0
pushbytes 0x676f7665726e616e6365 // "governance"
==
bnz main_l13
err
main_l13:
callsub checkForDuplicate_11
txn GroupIndex
intc_0 // 1
-
gtxns TypeEnum
pushint 6 // appl
==
txn GroupIndex
intc_0 // 1
-
gtxns ApplicationID
txn ApplicationID
==
&&
txn GroupIndex
intc_0 // 1
-
gtxnsa ApplicationArgs 0
bytec 6 // "verifyVAA"
==
&&
txn GroupIndex
intc_0 // 1
-
gtxns Sender
txn Sender
==
&&
txn GroupIndex
intc_0 // 1
-
gtxns RekeyTo
global ZeroAddress
==
&&
txn GroupIndex
intc_0 // 1
-
gtxnsa ApplicationArgs 1
txna ApplicationArgs 1
==
&&
txn GroupIndex
gtxns RekeyTo
global ZeroAddress
==
&&
txn GroupIndex
gtxns Sender
txn Sender
==
&&
txn GroupIndex
intc_0 // 1
-
gtxnsa Accounts 0
txna Accounts 0
==
&&
txn GroupIndex
intc_0 // 1
-
gtxnsa Accounts 1
txna Accounts 1
==
&&
txn GroupIndex
intc_0 // 1
-
gtxnsa Accounts 2
txna Accounts 2
==
&&
assert
bytec_3 // "currentGuardianSetIndex"
app_global_get
store 27
load 27
intc_1 // 0
!=
bnz main_l28
main_l14:
txna ApplicationArgs 1
extract 5 1
btoi
pushint 66 // 66
*
pushint 14 // 14
+
store 22
txna ApplicationArgs 1
load 22
intc_3 // 2
extract3
bytec 12 // 0x0001
==
assert
txna ApplicationArgs 1
load 22
intc_3 // 2
+
pushint 32 // 32
extract3
bytec 13 // 0x0000000000000000000000000000000000000000000000000000000000000004
==
assert
load 22
pushint 43 // 43
+
store 22
txna ApplicationArgs 1
load 22
pushint 32 // 32
extract3
bytec 14 // 0x00000000000000000000000000000000000000000000000000000000436f7265
==
assert
load 22
pushint 32 // 32
+
store 22
txna ApplicationArgs 1
load 22
intc_0 // 1
+
intc_3 // 2
extract3
store 30
load 30
bytec_1 // 0x0008
==
load 30
bytec 15 // 0x0000
==
||
assert
txna ApplicationArgs 1
load 22
intc_0 // 1
extract3
btoi
store 23
load 23
intc_0 // 1
==
bnz main_l27
load 23
intc_3 // 2
==
bnz main_l22
load 23
pushint 3 // 3
==
bnz main_l21
load 23
pushint 4 // 4
==
bnz main_l19
err
main_l19:
load 22
intc_0 // 1
+
store 22
load 30
bytec_1 // 0x0008
==
assert
load 22
pushint 26 // 26
+
store 22
txna ApplicationArgs 1
load 22
pushint 8 // 8
extract3
btoi
store 25
load 22
pushint 8 // 8
+
store 22
txna ApplicationArgs 1
load 22
pushint 32 // 32
extract3
store 24
itxn_begin
intc_0 // pay
itxn_field TypeEnum
load 24
itxn_field Receiver
load 25
itxn_field Amount
intc_1 // 0
itxn_field Fee
itxn_submit
main_l20:
intc_0 // 1
return
intc_0 // 1
return
main_l21:
load 22
intc_0 // 1
+
store 22
load 30
bytec_1 // 0x0008
==
assert
load 22
intc_3 // 2
+
pushint 24 // 24
+
store 22
txna ApplicationArgs 1
load 22
pushint 8 // 8
extract3
btoi
store 25
bytec 4 // "MessageFee"
load 25
app_global_put
b main_l20
main_l22:
load 22
pushint 3 // 3
+
store 22
txna ApplicationArgs 1
load 22
pushint 4 // 4
extract3
store 29
load 29
btoi
store 26
txna Accounts 3
load 26
bytec_2 // "guardian"
callsub getsigaddress_9
==
assert
intc_1 // 0
intc_1 // 0
==
bnz main_l26
main_l23:
bytec_3 // "currentGuardianSetIndex"
load 26
app_global_put
load 22
pushint 4 // 4
+
store 22
txna ApplicationArgs 1
load 22
intc_0 // 1
extract3
btoi
store 28
load 28
intc_1 // 0
>
assert
pushint 3 // 3
intc_1 // 0
txna ApplicationArgs 1
load 22
intc_0 // 1
pushint 20 // 20
load 28
*
+
extract3
callsub write_7
pop
txna Accounts 3
txna Accounts 2
!=
bnz main_l25
main_l24:
pushint 3 // 3
bytec_2 // "guardian"
callsub meta_5
b main_l20
main_l25:
intc_3 // 2
intc 4 // 1000
txn FirstValid
intc 5 // 19200
+
itob
callsub write_7
pop
b main_l24
main_l26:
txna Accounts 3
txna Accounts 2
!=
assert
load 26
load 27
>
assert
b main_l23
main_l27:
load 22
pushint 3 // 3
+
store 22
bytec 5 // "validUpdateApproveHash"
txna ApplicationArgs 1
load 22
pushint 32 // 32
extract3
app_global_put
b main_l20
main_l28:
txna ApplicationArgs 1
extract 1 4
store 26
load 26
btoi
load 27
==
assert
b main_l14
main_l29:
txna Accounts 2
txna ApplicationArgs 1
extract 1 4
btoi
bytec_2 // "guardian"
callsub getsigaddress_9
==
assert
intc_3 // 2
bytec_2 // "guardian"
callsub checkMeta_6
intc_3 // 2
intc_1 // 0
callsub getbyte_2
store 13
intc_3 // 2
intc_0 // 1
intc_0 // 1
pushint 20 // 20
load 13
*
+
callsub read_4
store 14
intc_3 // 2
intc 4 // 1000
pushint 1008 // 1008
callsub read_4
btoi
store 19
load 19
intc_1 // 0
!=
bnz main_l44
main_l30:
pushbytes 0x00000000 // 0x00000000
store 18
txna ApplicationArgs 1
extract 5 1
btoi
store 15
pushint 6 // 6
load 15
pushint 66 // 66
*
+
store 16
txna ApplicationArgs 1
load 16
txna ApplicationArgs 1
len
load 16
-
extract3
keccak256
keccak256
store 17
load 13
intc_1 // 0
>
load 15
load 13
<=
&&
load 15
load 13
intc_3 // 2
*
pushint 3 // 3
/
>
&&
assert
pushint 6 // 6
store 16
intc_1 // 0
store 11
main_l31:
load 11
txn GroupIndex
<=
bnz main_l33
load 16
pushint 6 // 6
load 15
pushint 66 // 66
*
+
==
assert
intc_0 // 1
return
main_l33:
load 11
gtxns TypeEnum
pushint 6 // appl
==
load 11
gtxns RekeyTo
global ZeroAddress
==
&&
load 11
gtxns ApplicationID
txn ApplicationID
==
&&
load 11
gtxnsa Accounts 1
txna Accounts 1
==
&&
load 11
gtxnsa Accounts 2
txna Accounts 2
==
&&
assert
load 11
gtxnsa ApplicationArgs 0
store 12
load 12
bytec 11 // "verifySigs"
==
bnz main_l40
load 12
bytec 10 // "nop"
==
bnz main_l39
load 12
bytec 6 // "verifyVAA"
==
bnz main_l39
intc_0 // 1
intc_0 // 1
==
bnz main_l38
err
main_l38:
intc_1 // 0
return
main_l39:
load 11
intc_0 // 1
+
store 11
b main_l31
main_l40:
load 11
gtxnsa ApplicationArgs 1
store 19
txna ApplicationArgs 1
load 16
load 19
len
extract3
load 19
==
assert
load 16
load 19
len
+
store 20
bytec_0 // ""
store 19
main_l41:
load 16
load 20
<
bnz main_l43
load 11
gtxnsa ApplicationArgs 2
load 19
==
load 11
gtxns Sender
bytec 7 // "vphash"
app_global_get
==
&&
load 11
gtxnsa ApplicationArgs 3
load 17
==
&&
assert
b main_l39
main_l43:
txna ApplicationArgs 1
load 16
intc_0 // 1
extract3
btoi
store 21
load 18
load 21
getbit
intc_1 // 0
==
assert
load 18
load 21
intc_0 // 1
setbit
store 18
load 19
load 14
load 21
pushint 20 // 20
*
pushint 20 // 20
extract3
concat
store 19
load 16
pushint 66 // 66
+
store 16
b main_l41
main_l44:
txn FirstValid
load 19
<
assert
b main_l30
main_l45:
intc_0 // 1
return
main_l46:
bytec 7 // "vphash"
txna ApplicationArgs 2
app_global_put
txn Sender
global CreatorAddress
==
assert
bytec 16 // "booted"
app_global_get
intc_1 // 0
==
assert
bytec 16 // "booted"
pushbytes 0x74727565 // "true"
app_global_put
callsub checkForDuplicate_11
bytec_3 // "currentGuardianSetIndex"
app_global_get
store 7
load 7
intc_1 // 0
!=
bnz main_l61
main_l47:
txna ApplicationArgs 1
extract 5 1
btoi
pushint 66 // 66
*
pushint 14 // 14
+
store 2
txna ApplicationArgs 1
load 2
intc_3 // 2
extract3
bytec 12 // 0x0001
==
assert
txna ApplicationArgs 1
load 2
intc_3 // 2
+
pushint 32 // 32
extract3
bytec 13 // 0x0000000000000000000000000000000000000000000000000000000000000004
==
assert
load 2
pushint 43 // 43
+
store 2
txna ApplicationArgs 1
load 2
pushint 32 // 32
extract3
bytec 14 // 0x00000000000000000000000000000000000000000000000000000000436f7265
==
assert
load 2
pushint 32 // 32
+
store 2
txna ApplicationArgs 1
load 2
intc_0 // 1
+
intc_3 // 2
extract3
store 10
load 10
bytec_1 // 0x0008
==
load 10
bytec 15 // 0x0000
==
||
assert
txna ApplicationArgs 1
load 2
intc_0 // 1
extract3
btoi
store 3
load 3
intc_0 // 1
==
bnz main_l60
load 3
intc_3 // 2
==
bnz main_l55
load 3
pushint 3 // 3
==
bnz main_l54
load 3
pushint 4 // 4
==
bnz main_l52
err
main_l52:
load 2
intc_0 // 1
+
store 2
load 10
bytec_1 // 0x0008
==
assert
load 2
pushint 26 // 26
+
store 2
txna ApplicationArgs 1
load 2
pushint 8 // 8
extract3
btoi
store 5
load 2
pushint 8 // 8
+
store 2
txna ApplicationArgs 1
load 2
pushint 32 // 32
extract3
store 4
itxn_begin
intc_0 // pay
itxn_field TypeEnum
load 4
itxn_field Receiver
load 5
itxn_field Amount
intc_1 // 0
itxn_field Fee
itxn_submit
main_l53:
intc_0 // 1
return
main_l54:
load 2
intc_0 // 1
+
store 2
load 10
bytec_1 // 0x0008
==
assert
load 2
intc_3 // 2
+
pushint 24 // 24
+
store 2
txna ApplicationArgs 1
load 2
pushint 8 // 8
extract3
btoi
store 5
bytec 4 // "MessageFee"
load 5
app_global_put
b main_l53
main_l55:
load 2
pushint 3 // 3
+
store 2
txna ApplicationArgs 1
load 2
pushint 4 // 4
extract3
store 9
load 9
btoi
store 6
txna Accounts 3
load 6
bytec_2 // "guardian"
callsub getsigaddress_9
==
assert
intc_0 // 1
intc_1 // 0
==
bnz main_l59
main_l56:
bytec_3 // "currentGuardianSetIndex"
load 6
app_global_put
load 2
pushint 4 // 4
+
store 2
txna ApplicationArgs 1
load 2
intc_0 // 1
extract3
btoi
store 8
load 8
intc_1 // 0
>
assert
pushint 3 // 3
intc_1 // 0
txna ApplicationArgs 1
load 2
intc_0 // 1
pushint 20 // 20
load 8
*
+
extract3
callsub write_7
pop
txna Accounts 3
txna Accounts 2
!=
bnz main_l58
main_l57:
pushint 3 // 3
bytec_2 // "guardian"
callsub meta_5
b main_l53
main_l58:
intc_3 // 2
intc 4 // 1000
txn FirstValid
intc 5 // 19200
+
itob
callsub write_7
pop
b main_l57
main_l59:
txna Accounts 3
txna Accounts 2
!=
assert
load 6
load 7
>
assert
b main_l56
main_l60:
load 2
pushint 3 // 3
+
store 2
bytec 5 // "validUpdateApproveHash"
txna ApplicationArgs 1
load 2
pushint 32 // 32
extract3
app_global_put
b main_l53
main_l61:
txna ApplicationArgs 1
extract 1 4
store 6
load 6
btoi
load 7
==
assert
b main_l47
main_l62:
intc_0 // 1
return
main_l63:
txna Accounts 1
intc_1 // 0
txn Sender
callsub getsigaddress_9
==
assert
bytec 4 // "MessageFee"
app_global_get
store 1
load 1
intc_1 // 0
>
bnz main_l65
main_l64:
intc_0 // 1
intc_1 // 0
pushint 8 // 8
callsub read_4
btoi
intc_0 // 1
+
itob
store 0
intc_0 // 1
intc_1 // 0
load 0
callsub write_7
pop
load 0
log
intc_0 // 1
bytec 9 // "publishMessage"
callsub meta_5
intc_0 // 1
return
main_l65:
txn GroupIndex
intc_0 // 1
-
gtxns TypeEnum
intc_0 // pay
==
txn GroupIndex
intc_0 // 1
-
gtxns Amount
load 1
>=
&&
txn GroupIndex
intc_0 // 1
-
gtxns Receiver
global CurrentApplicationAddress
==
&&
txn GroupIndex
intc_0 // 1
-
gtxns RekeyTo
global ZeroAddress
==
&&
assert
b main_l64
main_l66:
callsub optin_10
return
main_l67:
intc_1 // 0
return
main_l68:
bytec 8 // "Program"
txn ApprovalProgram
concat
sha512_256
bytec 5 // "validUpdateApproveHash"
app_global_get
==
assert
bytec 8 // "Program"
txn ClearStateProgram
concat
sha512_256
bytec 17 // "validUpdateClearHash"
app_global_get
==
assert
intc_0 // 1
return
main_l69:
bytec 4 // "MessageFee"
intc_1 // 0
app_global_put
bytec 7 // "vphash"
bytec_0 // ""
app_global_put
bytec_3 // "currentGuardianSetIndex"
intc_1 // 0
app_global_put
bytec 5 // "validUpdateApproveHash"
bytec_0 // ""
app_global_put
bytec 17 // "validUpdateClearHash"
pushbytes 0x73be5fd7cd378289177bf4a7ca5433ab30d91b417381bba8bd704aff2dec424f // 0x73be5fd7cd378289177bf4a7ca5433ab30d91b417381bba8bd704aff2dec424f
app_global_put
intc_0 // 1
return

// intkey
intkey_0:
store 33
load 33
itob
extract 7 1
retsub

// zero
zero_1:
store 58
intc_1 // 0
store 59
zero_1_l1:
load 59
pushint 15 // 15
<
bz zero_1_l3
load 58
load 59
callsub intkey_0
intc_2 // 127
bzero
app_local_put
load 59
intc_0 // 1
+
store 59
b zero_1_l1
zero_1_l3:
retsub

// get_byte
getbyte_2:
store 32
store 31
load 31
load 32
intc_2 // 127
/
callsub intkey_0
app_local_get
load 32
intc_2 // 127
%
getbyte
retsub

// set_byte
setbyte_3:
store 67
store 66
store 65
load 65
load 66
intc_2 // 127
/
callsub intkey_0
load 65
load 66
intc_2 // 127
/
callsub intkey_0
app_local_get
load 66
intc_2 // 127
%
load 67
setbyte
app_local_put
retsub

// read
read_4:
store 36
store 35
store 34
bytec_0 // ""
store 38
load 35
intc_2 // 127
/
store 37
read_4_l1:
load 37
load 36
intc_2 // 127
/
<=
bz read_4_l9
load 37
load 35
intc_2 // 127
/
==
bnz read_4_l8
intc_1 // 0
read_4_l4:
store 39
load 37
load 36
intc_2 // 127
/
==
bnz read_4_l7
intc_2 // 127
read_4_l6:
store 40
load 38
load 34
load 37
callsub intkey_0
app_local_get
load 39
load 40
substring3
concat
store 38
load 37
intc_0 // 1
+
store 37
b read_4_l1
read_4_l7:
load 36
intc_2 // 127
%
b read_4_l6
read_4_l8:
load 35
intc_2 // 127
%
b read_4_l4
read_4_l9:
load 38
retsub

// meta
meta_5:
store 42
store 41
load 41
bytec 18 // "meta"
load 42
app_local_put
retsub

// checkMeta
checkMeta_6:
store 44
store 43
load 43
bytec 18 // "meta"
app_local_get
load 44
==
pushint 145 // 145
&&
assert
retsub

// write
write_7:
store 47
store 46
store 45
intc_1 // 0
store 51
load 46
intc_2 // 127
/
store 48
write_7_l1:
load 48
load 46
load 47
len
+
intc_2 // 127
/
<=
bz write_7_l12
load 48
load 46
intc_2 // 127
/
==
bnz write_7_l11
intc_1 // 0
write_7_l4:
store 49
load 48
load 46
load 47
len
+
intc_2 // 127
/
==
bnz write_7_l10
intc_2 // 127
write_7_l6:
store 50
load 45
load 48
callsub intkey_0
load 50
intc_2 // 127
!=
load 49
intc_1 // 0
!=
||
bnz write_7_l9
intc_2 // 127
store 52
load 47
load 51
intc_2 // 127
extract3
write_7_l8:
app_local_put
load 51
load 52
+
store 51
load 48
intc_0 // 1
+
store 48
b write_7_l1
write_7_l9:
load 50
load 49
-
store 52
load 45
load 48
callsub intkey_0
app_local_get
intc_1 // 0
load 49
substring3
load 47
load 51
load 52
extract3
concat
load 45
load 48
callsub intkey_0
app_local_get
load 50
intc_2 // 127
substring3
concat
b write_7_l8
write_7_l10:
load 46
load 47
len
+
intc_2 // 127
%
b write_7_l6
write_7_l11:
load 46
intc_2 // 127
%
b write_7_l4
write_7_l12:
load 51
retsub

// encode_uvarint
encodeuvarint_8:
store 56
store 55
load 56
store 57
load 57
load 55
intc 6 // 128
>=
bnz encodeuvarint_8_l2
load 55
intc 7 // 255
&
itob
extract 7 1
b encodeuvarint_8_l3
encodeuvarint_8_l2:
load 55
pushint 7 // 7
shr
load 55
intc 7 // 255
&
intc 6 // 128
|
itob
extract 7 1
load 55
load 56
load 57
uncover 4
uncover 4
callsub encodeuvarint_8
cover 3
store 57
store 56
store 55
encodeuvarint_8_l3:
concat
retsub

// get_sig_address
getsigaddress_9:
store 54
store 53
bytec 8 // "Program"
pushbytes 0x0620010181 // 0x0620010181
concat
load 53
bytec_0 // ""
callsub encodeuvarint_8
concat
pushbytes 0x4880 // 0x4880
concat
load 54
len
bytec_0 // ""
callsub encodeuvarint_8
concat
load 54
concat
pushbytes 0x488800014332048103124433001022124433000881 // 0x488800014332048103124433001022124433000881
concat
intc 8 // 1002000
bytec_0 // ""
callsub encodeuvarint_8
concat
pushbytes 0x124433002032031244330009320312443301108106124433011922124433011881 // 0x124433002032031244330009320312443301108106124433011922124433011881
concat
global CurrentApplicationID
bytec_0 // ""
callsub encodeuvarint_8
concat
pushbytes 0x1244330120320312443302102212443302088100124433022080 // 0x1244330120320312443302102212443302088100124433022080
concat
global CurrentApplicationAddress
len
bytec_0 // ""
callsub encodeuvarint_8
concat
global CurrentApplicationAddress
concat
pushbytes 0x1244330209320312442243 // 0x1244330209320312442243
concat
sha512_256
retsub

// optin
optin_10:
gtxn 0 TypeEnum
intc_0 // pay
==
gtxn 0 Amount
intc 8 // 1002000
==
&&
gtxn 1 TypeEnum
pushint 6 // appl
==
&&
gtxn 1 OnCompletion
intc_0 // OptIn
==
&&
gtxn 1 ApplicationID
global CurrentApplicationID
==
&&
assert
intc_1 // 0
callsub zero_1
intc_0 // 1
retsub

// checkForDuplicate
checkForDuplicate_11:
txna ApplicationArgs 1
extract 0 1
btoi
intc_0 // 1
==
assert
txna ApplicationArgs 1
extract 5 1
btoi
pushint 66 // 66
*
pushint 14 // 14
+
store 60
txna ApplicationArgs 1
load 60
pushint 34 // 34
extract3
store 61
txna ApplicationArgs 1
load 60
pushint 34 // 34
+
pushint 8 // 8
extract3
btoi
store 62
load 62
pushint 15240 // 15240
/
store 64
txna Accounts 1
load 64
load 61
callsub getsigaddress_9
==
assert
load 62
pushint 8 // 8
/
pushint 1905 // 1905
%
store 64
intc_0 // 1
load 64
callsub getbyte_2
store 63
load 63
load 62
pushint 8 // 8
%
getbit
intc_1 // 0
==
assert
intc_0 // 1
load 64
load 63
load 62
pushint 8 // 8
%
intc_0 // 1
setbit
callsub setbyte_3
intc_0 // 1
pushbytes 0x6475706c6963617465 // "duplicate"
callsub meta_5
retsub